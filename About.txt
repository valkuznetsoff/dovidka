Ниже приведено тестовое задание. Готовую программу ожидаем на githab 20
апреля.
Если есть вопросы пишите, звоните.
Подтвердите получение.

Завдання
Розробити програмне забезпечення ведення (додавання, модифікація, вилучення)
довідника (обов’язкові атрибути: код, поняття).
Має бути реалізованим:
•       підтримка ієрархічної залежності понять; наприклад:
адміністративно-територіальні одиниці;
•       підтримка версійності понять довідника з їхньою залежністю у часі;
•       засоби отримання певного поняття довідника, актуального на певний
проміжок часу
•       виведення інформації щодо усіх поняттях словника на певну дату у
текстовий файл чи на екран (вимог до форми виведення не висувається);
•       застасувати патерн dependency injection із застосуванням
поліморфізму.
Засоби, що мають бути застосовані:
•       СКБД Microsoft SQL Server (2008R2 та вище);
•       Embarcatero RAD Studio XE та вище;
•       бібліотека Developer Express VCL (для розробки інтерфейсу).
інших сторонніх бібліотек не застосовувати.
Результати роботи мають бути поданими у такому вигляді:
•       вихідний код мовою Object Pascal;
•       вихідний код DDL;
•       вихідний код T-SQL реалізації логіки на боці СКБД (процедури,
функції);
•       інструкція щодо розгортання середовища для тестування (перевірки
працездатності) розробленого ПЗ;
•       оцінка «чистого» часу, що було витрачено на виконання завдання у
розрізі етапів.

-------------------------------------------------------------------------

Загруженный архив необходимо разместить на диске "D:" в папке "DOVIDKA".
Для создания базы данных необходимо войти в SQL Server Management Studio,
нажать на кнопку "New Query" и в открывшемся окне загрузить и выполнить 
файл "script.SQL", который находится в этой же папке.

В задании реализовано:
• Иерархическая структура данных, состоящая из нескольких таблиц:
	• Region
	• City
	• Company
	• Employee
Для каждой таблицы созданы трггеры на вставку (для автоматической 
установки текущей даты в добавляемую запись) и удаление записи 
(на самом деле физического удаления записи не происходит, вместо 
этого устанавливается текущая дата в поле DateExp, что означает, 
что период действия данной записи закончился).
• Поддержка версионности справочника в зависимостиот времени, т.е.
на каждую дату можно увидеть "снимок" экрана, в точности совпадающий
с тем, который был на эту дату.
• Использован паттерн "dependency injection" в совокупности с данными
ini-файла "menus.ini", в котором находится информация для создания
меню. Ее можно как добавить, так и убрать. В результате в главном меню
и в контекстном меню главного экрана будут добавлены подменю согласно 
информации из этого файла. Например, после начальной инициализации
добавляюся два подменю со своими командами.
• используются экшены с горячими клавишами для:
	• "F1" - Просмотр этого файла
	• "F2" - Редактирование текущей записи. Редактирует возможные 
		поля для конкретного уровня. Например, для рергиона, 
		города и предприятия возможно редактирование только 
		наименования, а для сотрудника - ФИО, телефон, скайп, 
		эл. почта.
	• "F3" - Переключаель режимов "Скрытие / Отображение" удаленных 
		записей.
	• "F5" - Обновление данных (Например после изменения по сети)
	• "Ins" - Добавление записи в текущий уровень, например, курсор
		находится  на столбце "Город" - соответственно будет 
		добавлен город рядом с тем городом, на котором находится 
		курсор.
	• "Alt+Ins" - Добавление записи в дочерний уровень, например, 
		курсор находится  на столбце "Город" - соответственно 
		будет добавлено предприятие в данном городе, если же
		курсор находится на предприятии - будет добавлен 
		сотрудник в это предприятие.
	• "Del" - Удаление текущей записи. При этом в режиме скрытия 
		удаленных записей не будет видно никакой информации 
		касающейся данной записи. Например, удаляем город Киев,
		никакой информации по городу Киев не видно.
	• "Alt+Ins" - Восстановление тукещей записи. Возможно только в
		режиме видимости удаленных записей. После восстановления
		будет вся картина по этой записи даже в режиме скрытия
		удаленных записей.
	• Без горячей клавиши можно изменить актуальную дату просмотра.
		Выпадающий календарь находится под главным меню. После 
		изменения актуальной даты на экране останется только та 
		информация, которая была на эту дату.

-------------------------------------------------------------------------

Вторая версия задания.
Необходимо выполнить задание максимально приближенную к промышленным 
условиям эксплуатации.

-------------------------------------------------------------------------

Решение.
Программа начинает работать с минимального набора инструкций, а именно:
Единственное меню, состоящее из 3-х команд:
	• Создание базы данных
	• Подключение к базе данных
	• Удаление базы данных
При этом можно явно указать какую именно базу данных мы хотим создать,
подключить или удалить. Таким образом можно иметь неограниченное кол-во
баз. После подключения к базе даннх программа запишет алиас в ini-файл
"имя программы".ini, который должен находиться в папке с программой (если
его нет, то он будет создан). Также в папке с программой должны находиться 
файлы: "About.txt" (файл, который Ввы сейчас читаете), "menus.ini" 
(динамические меню), "tables.sql" (скрипт для созадния и заполнения таблиц 
базы данных). Сама база данных создается внутри программы. Путь для создания 
базы данных - по умолчанию, принятому в SQL Server. При создании таблиц 
используется скрипт, который находится в файле "tables.sql". Триггеры 
формируются внутри программы, т.к. за одну команду возможно создание только 
одного триггера.
После подключения к базе данных эти пункты уходят и на их место встают те
пункты, которые были в первой версии.
Изменилось представление данных. Вместо нескольких справочников: "Регион", 
"Город", "Предприятие"... осталось только 2 таблицы: "Уровень" и "Объект".
Минимальный уровень - 1 ("Местоположение"), максимальный - 6 ("Сотрудник").
"Местоположение" не может быть дочерним объектом, а "Сотрудник" не может
иметь дочерних объектов.
После первоначального создания базы данных ни один из объектов не привязан 
к другому (не имеет "дочерних" объектов). 
Добавилось перемещение объектов путем перетаскивания, при этом перетаскива-
емый объект остается на месте как "удаленный", а новый становится дочерним
к новому "родителю". 
При любом изменении (добавлении, редактировании, удалении, перемещении)
сохранияется время измененияв колонке "Изменено" (Updated).
Действуют ряд ограничений:
	• "Удаленный" объект изменять нельзя никоим образом (перемещение,
	редактирование, добавление, восстановление...)
	• В режиме просмотра истории ("актуальная" дата меньше текущей)
	дествуют те же самые ограничения.
В интерфейсе программы произошли некоторые изменения. Добавлен столбец
"Изменено" с точными датой и временем изменения (формируется автоматически).
В режиме просмотра красным цветом выделяются значения, которые произойдут с
объектом в следующий раз (действует также для колонки "Дата кон."). Серым 
цветом выделены "удаленные" объекты. Также жирным шрифтом выделены объекты,
имеющие "дочерние" объекты.
Оориентировочное время выполнения задания: 40 часов на 1-ю версию и 40 часов 
на 2-ю.
